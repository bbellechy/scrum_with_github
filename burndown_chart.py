import os
import requests
import matplotlib.pyplot as plt
from datetime import datetime, timedelta

# üîπ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ GitHub Repository ‡πÅ‡∏•‡∏∞ Token
GITHUB_TOKEN = "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"
REPO_OWNER = "bbellechy"
REPO_NAME = "projects"
PROJECT_NUMBER = 3  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ç‡∏≠‡∏á Project Board

# üîπ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Issue ‡∏à‡∏≤‡∏Å GitHub API
headers = {"Authorization": f"token {GITHUB_TOKEN}"}
url = f"https://api.github.com/repos/{REPO_OWNER}/{REPO_NAME}/issues?state=all"
response = requests.get(url, headers=headers)
issues = response.json()

# üîπ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î start_date ‡πÅ‡∏•‡∏∞ end_date ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
start_date = datetime.today() - timedelta(days=7)  # 7 ‡∏ß‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô
end_date = datetime.today()  # ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
days = (end_date - start_date).days + 1  # ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î

remaining_tasks = []
for day in range(days):
    date = start_date + timedelta(days=day)
    remaining = sum(1 for issue in issues if "closed_at" in issue and 
                    (issue["closed_at"] is None or 
                    datetime.strptime(issue["closed_at"], "%Y-%m-%dT%H:%M:%SZ") > date))
    remaining_tasks.append(remaining)

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏î‡∏π‡∏ß‡πà‡∏≤ print ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô remaining ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠ debug
    print(f"Day {day + 1} ({date.date()}): {remaining} remaining tasks")

# üîπ ‡∏™‡∏£‡πâ‡∏≤‡∏á Burndown Chart
plt.figure(figsize=(8, 5))
plt.plot(range(days), remaining_tasks, marker="o", linestyle="-", color="b", label="Remaining Tasks")
plt.xlabel("Days")
plt.ylabel("Number of Tasks Remaining")
plt.title("Sprint Burndown Chart")
plt.legend()
plt.grid(True)

# üîπ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏£‡∏≤‡∏ü‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå
plt.savefig("burndown_chart.png")
